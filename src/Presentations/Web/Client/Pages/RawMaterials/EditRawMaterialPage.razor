@page "/raw-materials/new"
@page "/raw-materials/edit/{Id:guid}"

@using Andromeda.Application.Shared.RawMaterials
@using Andromeda.Application.Shared.RawMaterials.Edit
@using Andromeda.Application.Shared.RawMaterials.Get
@using Andromeda.Domain.Shared

@inject IRawMaterialViewService ViewService
@inject IUiUtils UiUtils
@inject NavigationManager NavigationManager

<DeiEditForm OnValidSubmit="OnValidSubmitAsync" Model="_request" Validator="_validator">

    <GslPage Title="@Title" BackHref="@BackHref">
        <GslPageHeader/>
        <GslPageSection>
            <div class="tw:grid tw:grid-cols-1 sm:tw:grid-cols-2 tw:gap-4">
                <DeiTextField
                    @bind-Value="@_request.Name"
                    Label="Nome" Placeholder="Nome da matéria prima"/>

                <DeiTextField
                    @bind-Value="@_request.Brand"
                    Label="Marca" Placeholder="Nome da marca da matéria prima"/>

                <DeiTextField
                    @bind-Value="@_request.Description" Class="tw:col-span-full"
                    Label="Descrição" Placeholder="Descrição da matéria prima" Lines="4"/>

                <DeiEnumSelectField
                    TEnum="UnitOfMeasureType"
                    @bind-Value="@_request.UnitOfMeasure"
                    Label="Unidade de Medida" WithShortName/>

                <GslNumericField
                    @bind-Value="@_request.CostPerUnit" Currency
                    Label="Preço da unidade" Placeholder="Ex: 0,15" Min="0M" Max="1000000M" Step="0.2M" />
            </div>
        </GslPageSection>
        <GslPageCommandBar>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Salvar</MudButton>
        </GslPageCommandBar>
    </GslPage>

</DeiEditForm>

@code
{
    private readonly EditRawMaterialRequest _request = new();
    private readonly EditRawMaterialValidator _validator = new();
    private const string BackHref = "/raw-materials";

    private string Title => Id.HasValue ? "Editar Matéria Prima" : "Nova Matéria Prima";

    [Parameter] public Guid? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            var rawMaterial = await ViewService.GetAsync(new GetRawMaterialRequest { Id = Id.Value })
                .Use(UiUtils)
                .ShowError();
            
            _request.CopyFrom(rawMaterial);
        }
    }

    private async Task OnValidSubmitAsync()
    {
        await ViewService
            .EditAsync(_request)
            .Use(UiUtils)
            .ShowBusy(Id.HasValue ? "Gravando alterações..." : "Salvando nova matéria prima...")
            .ShowError()
            .ShowSuccess("Matéria prima salva com sucesso!");

        NavigationManager.NavigateTo(BackHref);
    }
}
@page "/raw-materials"

@using Andromeda.Application.Shared.RawMaterials
@using Andromeda.Application.Shared.RawMaterials.List
@using Andromeda.Application.Shared.RawMaterials.Remove

@inject IRawMaterialViewService ViewService
@inject IUiUtils UiUtils

<GslPage Title="Matérias Prima" BackHref="/">
    <GslPageHeader>
        <MudTooltip Text="Novo item">
            <MudIconButton Icon="@Icons.Material.Outlined.Add" Color="Color.Inherit" Href="/raw-materials/new"/>
        </MudTooltip>
    </GslPageHeader>
    <GslPageSection>
        <DeiLoader @ref="_loader" Load="LoadAsync" CanRetry PreserveState>
            @if (context.IsNotEmpty())
            {
                <MudTable Items="context" Hover Elevation="0" Dense >
                    <HeaderContent>
                        <MudTh>Nome</MudTh>
                        <MudTh>Marca</MudTh>
                        <MudTh>Descrição</MudTh>
                        <MudTh>Unidade de Medida</MudTh>
                        <MudTh>Custo da Unidade</MudTh>
                        <MudTh Class="!tw:text-right"></MudTh>
                    </HeaderContent>
                    <RowTemplate Context="item">
                        <MudTd DataLabel="Nome">@item.Name</MudTd>
                        <MudTd DataLabel="Marca">@item.Brand</MudTd>
                        <MudTd DataLabel="Descrição">
                            <span class="tw:line-clamp-1">
                                @item.Description
                            </span>
                        </MudTd>
                        <MudTd DataLabel="Unidade de Medida">@item.UnitOfMeasure.ToEnumOption().CombinedName</MudTd>
                        <MudTd DataLabel="Custo da Unidade">@item.CostPerUnit.ToCurrency()</MudTd>
                        <MudTd Class="!tw:text-right">
                            <MudStack Row Spacing="4">
                                <MudTooltip Text="@($"Editar: {item.Name}")">
                                    <MudIconButton
                                        Icon="@Icons.Material.Outlined.Edit"
                                        Color="Color.Primary"
                                        Href="@($"/raw-materials/edit/{item.Id}")" />
                                </MudTooltip>
                                <MudTooltip Text="@($"Remover: {item.Name}")">
                                    <MudIconButton
                                        Icon="@Icons.Material.Outlined.Delete"
                                        Color="Color.Error"
                                        OnClick="() => RemoveAsync(item.Id)"/>
                                </MudTooltip>
                            </MudStack>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            }
            else
            {
                <DeiNotFoundContent>Não há matérias primas cadastradas.</DeiNotFoundContent>
            }
        </DeiLoader>
    </GslPageSection>
</GslPage>

@code 
{
    private DeiLoader<ListRawMaterialsResponseItem[]> _loader = null!;
    
    private async Task<ListRawMaterialsResponseItem[]> LoadAsync() 
        => await ViewService.ListAsync(new ListRawMaterialsRequest());
    
    private async Task RemoveAsync(Guid id)
    {
        var confirm = await UiUtils.ConfirmAsync("Deseja realmente remover esta matéria prima?");
        
        if (!confirm) return;
        
        await ViewService
            .RemoveAsync(new RemoveRawMaterialRequest { Id = id })
            .Use(UiUtils)
            .ShowBusy("Removendo matéria prima...")
            .ShowError()
            .ShowSuccess("Matéria prima removida com sucesso!");
        
        await _loader.ReloadAsync();
    }
}